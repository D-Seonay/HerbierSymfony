{% block body %}
    {% for index, releve in releves %}
        {% if id == releve.id %}
            <div id="visualization_{{ releve.id }}" class="visualization"></div>

            <script>
                console.log("{{ id }} + {{ releve.id }}");
                const container{{ releve.id }} = document.getElementById("visualization_{{ releve.id }}");
                const dataString{{ releve.id }} = "{{ releve.releveBrut }}";
                const data{{ releve.id }} = dataString{{ releve.id }}.split('/').map(Number);

                function shuffle(array) {
                    for (let i = array.length - 1; i > 0; i--) {
                        const j = Math.floor(Math.random() * (i + 1));
                        [array[i], array[j]] = [array[j], array[i]];
                    }
                    return array;
                }

                data{{ releve.id }}.forEach(value => {
                    const table = document.createElement("table");
                    table.setAttribute("class", "sub-table");

                    let greenPositions = Array.from({ length: 9 }, (_, i) => i < value);

                    shuffle(greenPositions);

                    let positionIndex = 0;

                    for (let i = 0; i < 3; i++) {
                        const row = table.insertRow();

                        for (let j = 0; j < 3; j++) {
                            const cell = row.insertCell();

                            if (greenPositions[positionIndex]) {
                                cell.innerHTML = `<div class="sub-square" style="background-color: green;" data-x="${value}"></div>`;
                            } else {
                                cell.innerHTML = `<div class="sub-square" style="background-color: white;" data-x="${value}"></div>`;
                            }

                            positionIndex++;
                        }
                    }

                    container{{ releve.id }}.appendChild(table);
                });
            </script>
        {% endif %}
    {% endfor %}
    
    <style>
        .visualization {
            display: grid;
            grid-template-columns: repeat(3, auto);
            grid-gap: 5px;
            justify-content: center;
        }

        .sub-table {
            border-collapse: collapse;
        }

        .sub-square {
            width: 20px;
            height: 20px;
            border: 1px solid black;
            background-color: white;
        }
    </style>
{% endblock %}
