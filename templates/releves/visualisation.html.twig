{% extends 'base.html.twig' %}

{% block title %}Visualisation des carrés{% endblock %}

{% block body %}
    <h1>Visualisation des carrés</h1>
    
    {% for index, releve in releves %}
        <div>
            <p>Données :  {{ releve.releveBrut }}, </p>
            <div id="visualization_{{ index }}" class="visualization"></div>
        </div>
    {% endfor %}

    <script>
        {% for index, releve in releves %}
            const container{{ index }} = document.getElementById("visualization_{{ index }}");
            const dataString{{ index }} = "{{ releve.releveBrut }}";
            const data{{ index }} = dataString{{ index }}.split('/').map(Number);

            function shuffle(array) {
                for (let i = array.length - 1; i > 0; i--) {
                    const j = Math.floor(Math.random() * (i + 1));
                    [array[i], array[j]] = [array[j], array[i]];
                }
                return array;
            }

            data{{ index }}.forEach(value => {
                const table = document.createElement("table");
                table.setAttribute("class", "sub-table");

                let greenPositions = Array.from({ length: 9 }, (_, i) => i < value);

                shuffle(greenPositions);

                let positionIndex = 0;

                for (let i = 0; i < 3; i++) {
                    const row = table.insertRow();

                    for (let j = 0; j < 3; j++) {
                        const cell = row.insertCell();

                        if (greenPositions[positionIndex]) {
                            cell.innerHTML = `<div class="sub-square" style="background-color: green;" data-x="${value}"></div>`;
                        } else {
                            cell.innerHTML = `<div class="sub-square" style="background-color: white;" data-x="${value}"></div>`;
                        }

                        positionIndex++;
                    }
                }

                container{{ index }}.appendChild(table);
            });
        {% endfor %}
    </script>
    
    <style>
        .visualization {
            display: grid;
            grid-template-columns: repeat(3, auto);
            grid-gap: 5px;
            justify-content: center;
        }

        .sub-table {
            border-collapse: collapse;
        }

        .sub-square {
            width: 20px;
            height: 20px;
            border: 1px solid black;
            background-color: white;
        }
    </style>
{% endblock %}
